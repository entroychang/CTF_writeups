from Crypto.PublicKey import RSA
from Crypto.Util.number import *

# 5502769663009776377079720669811

n = 123006193325785805746551866983989208897157180584504785220492015044506997882528787981248997741779446567101389905373542503217081766734545678680925654493680883551011195711328477400543316353922406076527533160699464229407870196168355582856591961259817301119499100154010045634645905717917859893518768519347849811731
e = 65537

print(n)
print(e)

# sig = 123
# verified = (pow(sig, e, n) == bytes_to_long(b'Ethan Winters'))
# print(pow(sig, e, n))
# if verified:
#     print('success')
# else:
#     print('failed')

# 5502769663009776377079720669811=
# a â‰¡ sig^e (mod n) <=> n | 5502769663009776377079720669811-sig^e

print(n | 5502769663009776377079720669811 - pow(123, e))